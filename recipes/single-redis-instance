#!/bin/bash

# Recipe to spin up and configure a Redis instance on DigitalOcean.
#
#  - Ubuntu 12.04, 512mb, nyc2 region
#  - Redis installed, configured with autogenerated 256-bit password
#  - IP allowlisting so only specified IPs can connect
#  - A non-root user account created with SSH access using the overcast SSH key
#  - A snapshot of the configured instance, in case you need to rebuild it or spin up more
#
# This script takes around 5 minutes to run.

###############################################################################

# Configuration:

cluster="redis"
# instance="redis.001"
username="appuser"
sshPort="50022"
allowlist=""

###############################################################################

# You shouldn't have to edit anything below.

set -e

echo "Creating cluster $cluster if it doesn't already exist..."
overcast cluster create $cluster

if [ -z "$instance" ]; then
  # Autogenerate instance name based on number of existing instances in the cluster.
  id=$(printf '%03d' $(expr $(overcast cluster count $cluster) + 1))
  instance="$cluster.$id"
fi

echo "Creating instance $instance on DigitalOcean..."
overcast digitalocean create $instance --cluster $cluster

echo "Changing SSH port to $sshPort, configuring iptables..."
overcast run $instance harden_ssh
overcast expose $instance 22 $sshPort
overcast port $instance $sshPort
overcast expose $instance 6379 $sshPort --allowlist "$allowlist"

echo "System upgrade, installing core packages, installing redis..."
overcast run $instance install/core install/redis
overcast reboot $instance

echo "Setting redis password..."
overcast run $instance set_redis_password

echo "Adding user $username..."
overcast run $instance add_user --env "username=$username"

echo "Switching default SSH user to $username..."
echo "Going forward, to run commands on this instance as root, use --user root"
overcast instance update $instance --user $username

echo "Creating snapshot..."
overcast digitalocean snapshot $instance $instance.snapshot

echo "Done."
