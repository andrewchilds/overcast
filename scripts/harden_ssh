#!/usr/bin/env bash

# Configures SSH to enhance security.
# - Disallows password logins.
# - Decreases LoginGraceTime.
#
# Tested on:
# Ubuntu 22.04, 20.04, 14.04, 12.04
# Debian 7.0

# Usage:
# overcast run myInstanceOrCluster harden_ssh

# set -x

if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root." 1>&2
  exit 1
fi

cp /etc/ssh/sshd_config "/etc/ssh/sshd_config_backup-$(date +%F-%T)"

# Ref: https://www.sshaudit.com/hardening_guides.html#ubuntu_22_04_lts

# Re-generate the RSA and ED25519 keys
rm /etc/ssh/ssh_host_*
ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_rsa_key -N ""
ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""

# Remove small Diffie-Hellman moduli
awk '$5 >= 3071' /etc/ssh/moduli > /etc/ssh/moduli.safe
mv /etc/ssh/moduli.safe /etc/ssh/moduli

# Enable the RSA and ED25519 keys
sed -i 's/^\#HostKey \/etc\/ssh\/ssh_host_\(rsa\|ed25519\)_key$/HostKey \/etc\/ssh\/ssh_host_\1_key/g' /etc/ssh/sshd_config

echo -e "\n# Restrict key exchange, cipher, and MAC algorithms, as per sshaudit.com\n# hardening guide.\nKexAlgorithms sntrup761x25519-sha512@openssh.com,curve25519-sha256,curve25519-sha256@libssh.org,gss-curve25519-sha256-,diffie-hellman-group16-sha512,gss-group16-sha512-,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256\nCiphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\nMACs hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com\nHostKeyAlgorithms ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256,rsa-sha2-256-cert-v01@openssh.com" > /etc/ssh/sshd_config.d/ssh-audit_hardening.conf

# Set LoginGraceTime to 30 seconds
sed -i -r 's/^#?(LoginGraceTime)[[:space:]]+[0-9]+m?/\1 30/g' /etc/ssh/sshd_config

# Disable PAM
sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config

# These are off by default in Ubuntu 20.04, leaving in for backwards compatibility.
sed -i -r 's/#\?PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config
sed -i 's/ChallengeResponseAuthentication yes/ChallengeResponseAuthentication no/g' /etc/ssh/sshd_config

# Check the SSH configuration for errors
sshd -t
if [ $? -ne 0 ]; then
   echo "Error in SSH configuration. Not reloading SSH."
   exit 1
fi

# Using `reload` instead of `restart` to avoid killing existing sessions.
service ssh reload

exit 0
